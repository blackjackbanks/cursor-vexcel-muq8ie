---
# Alertmanager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: excel-addin
    component: monitoring
    service: alertmanager
spec:
  replicas: 3
  selector:
    matchLabels:
      app: alertmanager
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      serviceAccountName: monitoring-service-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: alertmanager
              topologyKey: kubernetes.io/hostname
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.25.0
          args:
            - --config.file=/etc/alertmanager/alertmanager.yml
            - --storage.path=/alertmanager
            - --cluster.listen-address=0.0.0.0:9094
            - --cluster.peer=alertmanager-0.alertmanager:9094
            - --cluster.peer=alertmanager-1.alertmanager:9094
            - --cluster.peer=alertmanager-2.alertmanager:9094
          ports:
            - containerPort: 9093
              name: http
            - containerPort: 9094
              name: cluster
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9093
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9093
            initialDelaySeconds: 30
            periodSeconds: 15
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: config
              mountPath: /etc/alertmanager
              readOnly: true
            - name: storage
              mountPath: /alertmanager
            - name: tls
              mountPath: /etc/alertmanager/certs
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: alertmanager-config
        - name: storage
          persistentVolumeClaim:
            claimName: alertmanager-storage
        - name: tls
          secret:
            secretName: alertmanager-tls

---
# Alertmanager Service
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: excel-addin
    component: monitoring
    service: alertmanager
spec:
  type: ClusterIP
  ports:
    - port: 9093
      targetPort: 9093
      protocol: TCP
      name: http
    - port: 9094
      targetPort: 9094
      protocol: TCP
      name: cluster
  selector:
    app: alertmanager

---
# Alertmanager ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      slack_api_url: ${SLACK_API_URL}
      smtp_smarthost: smtp.company.com:587
      smtp_from: alertmanager@company.com
      smtp_auth_username: ${SMTP_USERNAME}
      smtp_auth_password: ${SMTP_PASSWORD}
      smtp_require_tls: true

    route:
      group_by: ['alertname', 'service', 'severity', 'cluster']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: slack-notifications
      routes:
        - match:
            severity: critical
          receiver: pagerduty-critical
          group_wait: 0s
          repeat_interval: 1h
        - match:
            severity: warning
          receiver: slack-notifications
          group_wait: 30s
          repeat_interval: 4h
        - match:
            team: security
          receiver: security-team
          group_wait: 0s
          repeat_interval: 2h

    receivers:
      - name: slack-notifications
        slack_configs:
          - channel: '#monitoring-alerts'
            send_resolved: true
            title: '{{ .GroupLabels.alertname }}'
            text: '{{ .CommonAnnotations.description }}'
            actions:
              - type: button
                text: View in Grafana
                url: '{{ .CommonAnnotations.grafana_url }}'

      - name: pagerduty-critical
        pagerduty_configs:
          - service_key: ${PAGERDUTY_SERVICE_KEY}
            description: '{{ .CommonAnnotations.description }}'
            severity: '{{ .CommonLabels.severity }}'
            client: Alertmanager
            client_url: '{{ .CommonAnnotations.runbook_url }}'

      - name: security-team
        email_configs:
          - to: security-team@company.com
            send_resolved: true
            headers:
              subject: '[SECURITY] {{ .GroupLabels.alertname }}'
        slack_configs:
          - channel: '#security-alerts'
            send_resolved: true
            title: '[SECURITY] {{ .GroupLabels.alertname }}'
            text: '{{ .CommonAnnotations.description }}'

    inhibit_rules:
      - source_match:
          severity: critical
        target_match:
          severity: warning
        equal: ['alertname', 'service', 'cluster']
      - source_match:
          severity: warning
        target_match:
          severity: info
        equal: ['alertname', 'service', 'cluster']

    templates:
      - /etc/alertmanager/templates/*.tmpl

---
# Alertmanager PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 10Gi