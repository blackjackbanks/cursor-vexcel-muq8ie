# NGINX configuration v1.25
# Enhanced security configuration for API Gateway with rate limiting and SSL

# Worker processes for better performance and resource utilization
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 50M;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$request_id" "$http_x_correlation_id"';

    access_log /var/log/nginx/access.log main buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /etc/nginx/dhparam.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.openai.com" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=formula_zone:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=data_zone:10m rate=20r/m;
    limit_req_zone $binary_remote_addr zone=version_zone:10m rate=200r/m;
    limit_req_zone $binary_remote_addr zone=changes_zone:10m rate=50r/m;

    # Upstreams
    upstream ai_service {
        least_conn;
        server ai-service:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream core_service {
        least_conn;
        server core-service:3002 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream data_service {
        least_conn;
        server data-service:3003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.excelai.com;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # Request size limits
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 16k;
        client_body_timeout 60s;
        client_header_timeout 60s;

        # Proxy settings
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_buffers 4 256k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;

        # API routes with rate limiting
        location /api/v1/formula/suggest {
            limit_req zone=formula_zone burst=20 nodelay;
            proxy_pass http://ai_service;
            error_page 429 = @too_many_requests;
        }

        location /api/v1/data/clean {
            limit_req zone=data_zone burst=5 nodelay;
            proxy_pass http://data_service;
            error_page 429 = @too_many_requests;
        }

        location /api/v1/version {
            limit_req zone=version_zone burst=50 nodelay;
            proxy_pass http://core_service;
            error_page 429 = @too_many_requests;
        }

        location /api/v1/changes/batch {
            limit_req zone=changes_zone burst=10 nodelay;
            proxy_pass http://core_service;
            error_page 429 = @too_many_requests;
        }

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"healthy","timestamp":$msec}';
        }

        # Rate limit error response
        location @too_many_requests {
            add_header Content-Type application/json;
            return 429 '{"success":false,"error":{"code":"RATE_LIMIT_EXCEEDED","message":"Too many requests, please try again later","service":"api-gateway","details":{},"timestamp":$msec}}';
        }

        # Error pages
        error_page 404 = @not_found;
        error_page 500 502 503 504 = @server_error;

        location @not_found {
            add_header Content-Type application/json;
            return 404 '{"success":false,"error":{"code":"NOT_FOUND","message":"Resource not found","service":"api-gateway","details":{},"timestamp":$msec}}';
        }

        location @server_error {
            add_header Content-Type application/json;
            return 500 '{"success":false,"error":{"code":"SERVER_ERROR","message":"Internal server error","service":"api-gateway","details":{},"timestamp":$msec}}';
        }
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name api.excelai.com;
        return 301 https://$server_name$request_uri;
    }
}