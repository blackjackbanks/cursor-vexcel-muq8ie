name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  PYTHON_VERSION: '3.11'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [frontend, backend, ai-service]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        if: matrix.service != 'ai-service'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            src/web/package.json
            src/backend/package.json

      - name: Setup Python
        if: matrix.service == 'ai-service'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: src/backend/services/ai/requirements.txt

      - name: Install Frontend Dependencies
        if: matrix.service == 'frontend'
        working-directory: src/web
        run: |
          npm ci
          npm audit fix

      - name: Install Backend Dependencies
        if: matrix.service == 'backend'
        working-directory: src/backend
        run: |
          npm ci
          npm audit fix

      - name: Install AI Service Dependencies
        if: matrix.service == 'ai-service'
        working-directory: src/backend/services/ai
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Type Check Frontend
        if: matrix.service == 'frontend'
        working-directory: src/web
        run: npm run type-check

      - name: Lint Frontend
        if: matrix.service == 'frontend'
        working-directory: src/web
        run: |
          npm run lint
          npm run format -- --check

      - name: Test Frontend
        if: matrix.service == 'frontend'
        working-directory: src/web
        run: |
          npm run test:coverage
          npm run test:a11y
          npm run test:perf

      - name: Build Frontend
        if: matrix.service == 'frontend'
        working-directory: src/web
        run: |
          npm run build
          npm run analyze

      - name: Lint Backend
        if: matrix.service == 'backend'
        working-directory: src/backend
        run: npm run lint

      - name: Test Backend
        if: matrix.service == 'backend'
        working-directory: src/backend
        run: npm run test:coverage

      - name: Build Backend
        if: matrix.service == 'backend'
        working-directory: src/backend
        run: npm run build

      - name: Lint AI Service
        if: matrix.service == 'ai-service'
        working-directory: src/backend/services/ai
        run: |
          black --check .
          mypy .

      - name: Test AI Service
        if: matrix.service == 'ai-service'
        working-directory: src/backend/services/ai
        run: |
          pytest --cov=. --cov-report=xml

      - name: Security Scan Node.js
        if: matrix.service != 'ai-service'
        uses: snyk/actions/node@v1
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Security Scan Python
        if: matrix.service == 'ai-service'
        uses: snyk/actions/python@v1
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.service }}
          path: |
            src/web/coverage/**
            src/backend/coverage/**
            src/backend/services/ai/coverage.xml
          retention-days: 14

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.service }}
          path: |
            src/web/dist/**
            src/backend/dist/**
          retention-days: 14