name: Pull Request Validation

on:
  pull_request:
    branches: 
      - main
      - develop
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18.x'
  PYTHON_VERSION: '3.11'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  validate_frontend:
    name: Frontend Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/web/package.json
          
      - name: Install dependencies
        working-directory: src/web
        run: npm ci
        
      - name: Run ESLint
        working-directory: src/web
        run: npm run lint
        
      - name: Run TypeScript type checking
        working-directory: src/web
        run: npm run type-check
        
      - name: Run unit tests with coverage
        working-directory: src/web
        run: npm run test:coverage
        
      - name: Run accessibility tests
        working-directory: src/web
        run: npm run test:a11y
        
      - name: Run performance tests
        working-directory: src/web
        run: npm run test:perf
        
      - name: Analyze bundle size
        working-directory: src/web
        run: |
          npm run build
          npm run analyze

  validate_backend:
    name: Backend Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/backend/package.json
          
      - name: Install dependencies
        working-directory: src/backend
        run: npm ci
        
      - name: Run ESLint
        working-directory: src/backend
        run: npm run lint
        
      - name: Run tests with coverage
        working-directory: src/backend
        run: npm run test:coverage

  validate_ai_service:
    name: AI Service Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: src/backend/services/ai/requirements.txt
          
      - name: Install dependencies
        working-directory: src/backend/services/ai
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run black code formatting check
        working-directory: src/backend/services/ai
        run: black --check .
        
      - name: Run mypy type checking
        working-directory: src/backend/services/ai
        run: mypy .
        
      - name: Run pytest with coverage
        working-directory: src/backend/services/ai
        run: pytest --cov=. --cov-report=xml

  security_checks:
    name: Security Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          VALIDATE_TYPESCRIPT_ES: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_YAML: true
          
      - name: Run npm audit (Frontend)
        working-directory: src/web
        run: npm audit
        
      - name: Run npm audit (Backend)
        working-directory: src/backend
        run: npm audit
        
      - name: Run pip audit (AI Service)
        working-directory: src/backend/services/ai
        run: |
          pip install pip-audit
          pip-audit

  validation_report:
    name: Generate Validation Report
    needs: [validate_frontend, validate_backend, validate_ai_service, security_checks]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check workflow status
        uses: actions/github-script@v6
        with:
          script: |
            const jobs = ['validate_frontend', 'validate_backend', 'validate_ai_service', 'security_checks'];
            const results = jobs.map(job => context.result[job]);
            if (results.includes('failure')) {
              core.setFailed('One or more validation checks failed');
            }